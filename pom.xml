<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>es.rpjdcode</groupId>
	<artifactId>HostManager</artifactId>
	<version>0.0.3-SNAPSHOT</version>
	<organization>
		<name>RPJD</name>
	</organization>
	<inceptionYear>2024</inceptionYear>
	<description>Aplicación ERP</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<!-- Propiedades de versiones -->
		<javafx.version>21</javafx.version>
		<spring.version>6.1.14</spring.version>
		<hibernate.version>6.5.3.Final</hibernate.version>
		<jasper.version>7.0.1</jasper.version>
		<mysqlconnector.version>9.1.0</mysqlconnector.version>
		<mysql.version>8.0.40</mysql.version> <!-- Informativo -->
		<jakarta.version>3.2.0</jakarta.version>
		<jakarta.annotations.version>3.0.0</jakarta.annotations.version>
		<hikaricp.version>5.0.1</hikaricp.version>

	</properties>

	<dependencies>
		<!-- Módulos de JavaFX -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${javafx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${javafx.version}</version>
			<classifier>win</classifier>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-swing</artifactId>
			<version>${javafx.version}</version>
		</dependency>

		<!-- ControlsFX -->
		<dependency>
			<groupId>org.controlsfx</groupId>
			<artifactId>controlsfx</artifactId>
			<version>11.2.1</version>
		</dependency>

		<!-- ValidatorFX -->
		<dependency>
			<groupId>net.synedra</groupId>
			<artifactId>validatorfx</artifactId>
			<version>0.5.1</version>
		</dependency>

		<!-- TilesFX -->
		<dependency>
			<groupId>eu.hansolo</groupId>
			<artifactId>tilesfx</artifactId>
			<version>21.0.9</version>
		</dependency>

		<!-- CSSFX (depuración CSS) -->
		<dependency>
			<groupId>fr.brouillard.oss</groupId>
			<artifactId>cssfx</artifactId>
			<version>11.5.1</version>
		</dependency>

		<!-- Otros módulos de JavaFX si son necesarios (e.g. javafx-web,
		javafx-media) -->
		<!-- <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-web</artifactId>
            <version>${javafx.version}</version>
        </dependency> -->

		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Hibernate Dependencies -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-hikaricp</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>${jakarta.version}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
			<version>${jakarta.annotations.version}</version>
		</dependency>

		<!-- Conector MySQL Java -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>${mysqlconnector.version}</version>
		</dependency>


		<!-- Pool de conexiones HikariCP -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>${hikaricp.version}</version>
		</dependency>


		<!-- SLF4J API (Logging) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.16</version>
		</dependency>
		<!-- Logback Classic (incluye Logback Core) -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.5.16</version>
		</dependency>

		<!-- JasperReports para generación de informes/facturas -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>${jasper.version}</version>
		</dependency>

		<!-- Generación de PDFs basados en JasperReport -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-pdf</artifactId>
			<version>${jasper.version}</version>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<!-- Plugin de compilador de Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.13.0</version>
				<configuration>
					<source>21</source>
					<target>21</target>
					<release>21</release>
				</configuration>
			</plugin>

			<!-- Plugin para especificar al .jar el prefijo de classpath a
			utilizar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.4.2</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase> <!-- Cambiamos la fase -->
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>es.rpjd.app.Main</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin para almacenar las dependencias en un directorio /lib -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.8.0</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<!-- Plugin Maven Shade para empaquetar todas las dependencias en el
			mismo JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<createDependencyReducedPom>false</createDependencyReducedPom>
							<transformers>
								<!-- Añadir la clase principal al manifiesto -->
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>es.rpjd.app.Main</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Plugin para generación de ejecutable de aplicación -->
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<version>2.5.2</version>
				<executions>
					<execution>
						<id>l4j-clui</id>
						<phase>package</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<!-- No envuelve el JAR dentro del ejecutable como
							un archivo comprimido -->
							<dontWrapJar>true</dontWrapJar>

							<!-- Configuración básica del ejecutable -->
							<headerType>gui</headerType>
							<outfile>target/${project.artifactId}.exe</outfile>
							<!-- Al establecer que no se envuelve el JAR como un
							archivo comprimido, esta será la ruta
							a la que apuntará el .exe para ejecutar el JAR de la app -->
							<jar>jar/${project.build.finalName}.jar</jar>
							<errTitle>Error de la aplicación</errTitle>
							<downloadUrl>http://java.com/download</downloadUrl>
							<stayAlive>false</stayAlive>
							<restartOnCrash>false</restartOnCrash>
							<manifest>src/main/resources/HostManager.manifest</manifest>
							<!-- Parámetros JVM -->
							<jre>
								<minVersion>1.21.0</minVersion>
								<maxVersion></maxVersion>
								<requiresJdk>false</requiresJdk>
							</jre>
							<!-- Icono, Splash Screen, etc... -->
							<icon>src/main/resources/icon.ico</icon>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Automatización de firma de ejecutable y de creación de instalador -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>sign-exe</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>signtool.exe</executable>
							<arguments>
								<argument>sign</argument>
								<argument>/tr</argument>
								<argument>http://timestamp.digicert.com</argument>
								<argument>/td</argument>
								<argument>SHA256</argument>
								<argument>/v</argument>
								<argument>/f</argument>
								<argument>hostmanager_keystore.jks</argument>
								<argument>/p</argument>
								<argument>keystore123</argument>
								<argument>/fd</argument>
								<argument>SHA256</argument>
								<argument>/a</argument>
								<argument>
									${project.build.directory}/${project.artifactId}.exe</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>build-installer</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>C:\Program Files (x86)\NSIS\makensis.exe</executable>
							<workingDirectory>${project.basedir}</workingDirectory>
							<arguments>
								<argument>
									${project.basedir}/script_instalador.nsi</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>